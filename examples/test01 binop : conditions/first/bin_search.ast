A_program 
	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn main(
				|--A_paramDecl )->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_starttime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 3);

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar i:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar sum:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclArray a[10]:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal sum = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal i = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i<
								|--A_exprUnit 10)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal 
								|--A_arrayExpr 
								|--A_leftVal a[
									|--A_indexExpr i] = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar x:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar high:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar low:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar mid:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar n:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal n = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 10;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal x = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall getint();

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal high = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit n-
								|--A_arithExpr 
									|--A_exprUnit 1;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal low = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal mid = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit (
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit high+
												|--A_arithExpr 
													|--A_exprUnit low)/
								|--A_arithExpr 
									|--A_exprUnit 2;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolBiOpExpr 
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit 
											|--A_arrayExpr 
											|--A_leftVal a[
												|--A_indexExpr mid]!=
										|--A_exprUnit x)&&
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit low<
										|--A_exprUnit high)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal mid = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit (
												|--A_arithExpr 
													|--A_arithBiOpExpr 
														|--A_arithExpr 
															|--A_exprUnit high+
														|--A_arithExpr 
															|--A_exprUnit low)/
										|--A_arithExpr 
											|--A_exprUnit 2;

					|--A_codeBlockStmt 
						|--A_ifStmt if(
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit x<
										|--A_exprUnit 
											|--A_arrayExpr 
											|--A_leftVal a[
												|--A_indexExpr mid])){

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal high = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit mid-
												|--A_arithExpr 
													|--A_exprUnit 1;
}else{

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal low = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit mid+
												|--A_arithExpr 
													|--A_exprUnit 1;
}
}

			|--A_codeBlockStmt 
				|--A_ifStmt if(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit x==
								|--A_exprUnit 
									|--A_arrayExpr 
									|--A_leftVal a[
										|--A_indexExpr mid])){

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall putint(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit x);
}else{

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal x = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 0;

					|--A_codeBlockStmt 
						|--A_callStmt 
							|--A_fnCall putint(
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit x);
}

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal x = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 10;

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall putch(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit x);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_stoptime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 49);

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit 0;
}
