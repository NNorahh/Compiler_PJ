A_program 
	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn uniquePaths(
				|--A_paramDecl 
					|--A_varDecl 
						|--A_varDeclScalar m:
						|--A_type int, 
					|--A_varDecl 
						|--A_varDeclScalar n:
						|--A_type int)->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_ifStmt if(
					|--A_boolExpr 
						|--A_boolBiOpExpr 
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit m==
										|--A_exprUnit 1)||
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit n==
										|--A_exprUnit 1)){

					|--A_codeBlockStmt 
						|--A_returnStmt ret 
						|--A_rightVal 
							|--A_arithExpr 
								|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclArray dp[9]:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar i:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar j:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal i = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar temp1:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar temp2:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar temp3:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i<
								|--A_exprUnit m)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal temp1 = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_arithBiOpExpr 
														|--A_arithExpr 
															|--A_exprUnit i*
														|--A_arithExpr 
															|--A_exprUnit 3+
												|--A_arithExpr 
													|--A_exprUnit n-
										|--A_arithExpr 
											|--A_exprUnit 1;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal 
								|--A_arrayExpr 
								|--A_leftVal dp[
									|--A_indexExpr temp1] = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 1;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal i = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 0;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i<
								|--A_exprUnit n)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal temp1 = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit (
														|--A_arithExpr 
															|--A_arithBiOpExpr 
																|--A_arithExpr 
																	|--A_exprUnit m-
																|--A_arithExpr 
																	|--A_exprUnit 1)*
												|--A_arithExpr 
													|--A_exprUnit 3+
										|--A_arithExpr 
											|--A_exprUnit i;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal 
								|--A_arrayExpr 
								|--A_leftVal dp[
									|--A_indexExpr temp1] = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_exprUnit 1;

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i+
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal i = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_arithBiOpExpr 
								|--A_arithExpr 
									|--A_exprUnit m-
								|--A_arithExpr 
									|--A_exprUnit 2;

			|--A_codeBlockStmt 
				|--A_whileStmt while(
					|--A_boolExpr 
						|--A_boolUnit (
							|--A_comExpr 
								|--A_exprUnit i>
								|--A_exprUnit 
									|--A_arithUExpr -
										|--A_exprUnit 1)){

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal j = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit n-
										|--A_arithExpr 
											|--A_exprUnit 2;

					|--A_codeBlockStmt 
						|--A_whileStmt while(
							|--A_boolExpr 
								|--A_boolUnit (
									|--A_comExpr 
										|--A_exprUnit j>
										|--A_exprUnit 
											|--A_arithUExpr -
												|--A_exprUnit 1)){

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal temp1 = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_arithBiOpExpr 
														|--A_arithExpr 
															|--A_exprUnit i*
														|--A_arithExpr 
															|--A_exprUnit 3+
												|--A_arithExpr 
													|--A_exprUnit j;

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal temp2 = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_arithBiOpExpr 
														|--A_arithExpr 
															|--A_exprUnit (
																|--A_arithExpr 
																	|--A_arithBiOpExpr 
																		|--A_arithExpr 
																			|--A_exprUnit i+
																		|--A_arithExpr 
																			|--A_exprUnit 1)*
														|--A_arithExpr 
															|--A_exprUnit 3+
												|--A_arithExpr 
													|--A_exprUnit j;

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal temp3 = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_arithBiOpExpr 
														|--A_arithExpr 
															|--A_arithBiOpExpr 
																|--A_arithExpr 
																	|--A_exprUnit i*
																|--A_arithExpr 
																	|--A_exprUnit 3+
														|--A_arithExpr 
															|--A_exprUnit j+
												|--A_arithExpr 
													|--A_exprUnit 1;

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal 
										|--A_arrayExpr 
										|--A_leftVal dp[
											|--A_indexExpr temp1] = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit 
														|--A_arrayExpr 
														|--A_leftVal dp[
															|--A_indexExpr temp2]+
												|--A_arithExpr 
													|--A_exprUnit 
														|--A_arrayExpr 
														|--A_leftVal dp[
															|--A_indexExpr temp3];

							|--A_codeBlockStmt 
								|--A_assignStmt 
									|--A_leftVal j = 
									|--A_rightVal 
										|--A_arithExpr 
											|--A_arithBiOpExpr 
												|--A_arithExpr 
													|--A_exprUnit j-
												|--A_arithExpr 
													|--A_exprUnit 1;
}

					|--A_codeBlockStmt 
						|--A_assignStmt 
							|--A_leftVal i = 
							|--A_rightVal 
								|--A_arithExpr 
									|--A_arithBiOpExpr 
										|--A_arithExpr 
											|--A_exprUnit i-
										|--A_arithExpr 
											|--A_exprUnit 1;
}

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit 
							|--A_arrayExpr 
							|--A_leftVal dp[
								|--A_indexExpr 0];
}

	|--A_programElement 
		|--A_fnDef 
			|--A_fnDecl fn main(
				|--A_paramDecl )->
			|--A_type int{

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_starttime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 40);

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar res:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_varDeclStmt let 
					|--A_varDecl 
						|--A_varDeclScalar n:
						|--A_type int;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal n = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 3;

			|--A_codeBlockStmt 
				|--A_assignStmt 
					|--A_leftVal res = 
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 
								|--A_fnCall uniquePaths(
								|--A_rightVal 
									|--A_arithExpr 
										|--A_exprUnit n, 
								|--A_rightVal 
									|--A_arithExpr 
										|--A_exprUnit n);

			|--A_codeBlockStmt 
				|--A_callStmt 
					|--A_fnCall _sysy_stoptime(
					|--A_rightVal 
						|--A_arithExpr 
							|--A_exprUnit 45);

			|--A_codeBlockStmt 
				|--A_returnStmt ret 
				|--A_rightVal 
					|--A_arithExpr 
						|--A_exprUnit res;
}
